<?xml version="1.0"?>
<api>
	<description>
		<![CDATA[This API allows the querying of data surrounding participating fraternities and sororities and their approved events. Authenticated and approved users can add, modify, and delete events that they are designated to curate through these methods as well.]]>
	</description>
	
	
<!-- Badges API -->
	<command id='badges' security='public'>
		<description><![CDATA[This section reveals data about the Badges available to be earned through the use of the program.]]>
		</description>
		
		<index>
			<description><![CDATA[This returns a listing of all badges.]]>
			</description>
			
			<action file='badges.php'><![CDATA[listBadges();]]></action>
		</index>
		
		<get>
			<description><![CDATA[By designating 'badges/{BADGE_ID}', you can get details about a specific badge including how to earn it, its title and description, and when it was created.]]>
			</description>
			
			<action file='badges.php'><![CDATA[getBadge($_REST['badges']);]]></action>
		</get>
		<post> <!-- TODO should be private -->
			<description><![CDATA[The post method allows the posting of new badges for approval if the user is logged in and authorized to submit events.]]>
			</description>
			
			<action file='badges.php'><![CDATA[addBadge($_POST['badgeName'], $_POST['badgeGoal'], $_POST['badgeGoalUnits'], $_POST['badgeDescription'], $_POST['badgePreReq'], $_POST['badgeCustomPicUrl']);]]></action>
			
			<param id='badgeName'>
				<description><![CDATA[Display name of the badge]]></description>
				<exampleValue><![CDATA[Pledge]]></exampleValue>
			</param>
			<param id='badgeGoal'>
				<description><![CDATA[Amount of GOAL_UNITs to earn the badge]]></description>
				<exampleValue><![CDATA[5]]></exampleValue>
			</param>
			<param id='badgeGoalUnits'>
				<description><![CDATA[Units in which the badge will be measured]]></description>
				<exampleValue><![CDATA[Event Check-ins]]></exampleValue>
			</param>
			<param id='badgeDescription'>
				<description><![CDATA[Description of the badge. Feel free to explain why the badge was made, more information about the badge, or whatever you want.]]></description>
				<exampleValue><![CDATA[Join the ranks of the pledges by attending 5 events put on by any organization.]]></exampleValue>
			</param>
			<param id='badgePreReq'>
				<description><![CDATA[BADGE_ID that must be completed before this badge. (optional)]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
			<param id='badgeCustomPicUrl'>
				<description><![CDATA[URL for custom picture]]></description>
				<exampleValue><![CDATA[http://bit.ly/18rs2bI]]></exampleValue>
			</param>
		</post>
	</command>
	
	
<!-- Events API -->
	<command id='events' security='public'>
		<description><![CDATA[This section allows you to see events and their details. If you are logged in and have the correct permissions, you will be able to add, modify, and remove events for which you are authorized. Events that are not approved (either dissapproved or simply not approved yet) will not show up unless you are authorized to edit them.]]>
		</description>
		
		<index>
			<description><![CDATA[This returns a listing of all events that are approved.]]>
			</description>
			
			<action file='events.php'><![CDATA[listEvents();]]></action>
		</index>
		
		<get>
			<description><![CDATA[By designating 'events/{EVENT_ID}', a specific event will be returned along with its details, whether it has happened already or not.]]>
			</description>
			
			<action file='events.php'><![CDATA[getEvent($_REST['events']);]]></action>
		</get>
		
		<post> <!-- TODO should be private -->
			<description><![CDATA[The post method allows the posting of new events for approval if the user is logged in and authorized to submit events.]]>
			</description>
			
			<action file='events.php'><![CDATA[addEvent($_POST['eventDate'], $_POST['eventOrgId'], $_POST['eventTitle'], $_POST['eventFoursquare'], $_POST['eventAddress'], $_POST['eventStartTime'], $_POST['eventEndTime'], $_POST['eventSummary'], $_POST['eventType'], $_POST['eventSpecialNotes'], $_POST['eventAlcohol']);]]></action>
			
			<param id='eventDate'>
				<description><![CDATA[Date of the event]]></description>
				<exampleValue><![CDATA[2013-10-31]]></exampleValue>
			</param>
			<param id='eventOrgId'>
				<description><![CDATA[ORG_ID that is hosting the event]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
			<param id='eventTitle'>
				<description><![CDATA[Event title. Short name that describes the event]]></description>
				<exampleValue><![CDATA[Al-Be's Halloween Bash]]></exampleValue>
			</param>
			<param id='eventFoursquare'>
				<description><![CDATA[Foursquare ID for the event]]></description>
				<exampleValue><![CDATA[522f836711d26c041fd70a09]]></exampleValue>
			</param>
			<param id='eventAddress'>
				<description><![CDATA[Address of the event, new lines are delimited by '|']]></description>
				<exampleValue><![CDATA[Event Space, Theme Park, and Park in Bay Lake|Bay Lake, FL]]></exampleValue>
			</param>
			<param id='eventStartTime'>
				<description><![CDATA[Start time of the event]]></description>
				<exampleValue><![CDATA[2013-10-31T21:00:00]]></exampleValue>
			</param>
			<param id='eventEndTime'>
				<description><![CDATA[End time of the event.]]></description>
				<exampleValue><![CDATA[2013-11-01T03:30:00]]></exampleValue>
			</param>
			<param id='eventSummary'>
				<description><![CDATA[Summary of the event. Why should we come?]]></description>
				<exampleValue><![CDATA[Come out to the Al-Be Hallow's Eve celebration! There will be drinks for those of age, and fun for all around. Bring your best costume and hang out with the gents from Al-Be!]]></exampleValue>
			</param>
			<param id='eventType'>
				<description><![CDATA[Very short description of what the event is]]></description>
				<exampleValue><![CDATA[Party]]></exampleValue>
			</param>
			<param id='eventSpecialNotes'>
				<description><![CDATA[Theme of the event, or more information than title, but less than description]]></description>
				<exampleValue><![CDATA[Halloween Costume Party]]></exampleValue>
			</param>
			<param id='eventAlcohol'>
				<description><![CDATA[If alcohol is allowed at the event]]></description>
				<exampleValue><![CDATA[true]]></exampleValue>
			</param>
		</post>
		
		<put>
			<description><![CDATA[This is how you can update an event.]]></description>
			
			<action file='events.php'><![CDATA[updateEvent($_REST['events'],$_POST['eventsText']);]]></action>
			
			<param id='eventsText'>
				<description><![CDATA[event Text To update]]></description>
				<defaultValue><![CDATA[some default event text update]]></defaultValue>
				<exampleValue><![CDATA[some example event text update]]></exampleValue>
			</param>
		</put>
		
		<delete>
			<description><![CDATA[This is how you can delete a event]]></description>
			
			<action file='events.php'><![CDATA[deleteEvent($_REST['events']);]]></action>
		</delete>
		
		
		<!-- EVENTS/ORGS API -->
		<command id='orgs' security='public'>
			<description><![CDATA[This section allows you to see event details of specific organizations. Events that are not approved (either dissapproved or simply not approved yet) will not show up unless you are authorized to edit them.]]></description>
		
			<get>
				<description><![CDATA[This method, 'events/[anything]/orgs/{ORG_ID}', allows you to narrow returned events to just those associated with a specified organization.]]></description>
			
				<action file='orgs.php'><![CDATA[getOrg($_REST['orgs']);]]></action>
			</get>
		</command> <!-- Closes nested orgs -->
	
	</command> <!-- Closes events -->


<!-- GOV_ORGS API -->
	<command id='gov_orgs' security='public'>
		<description><![CDATA[This allows you to see, add, and remove governing organizations if you have permissions.]]></description>
		
		<index>
			<description><![CDATA[This returns a listing of all governing organizations.]]>
			</description>
			
			<action file='gov_orgs.php'><![CDATA[listGovOrgs();]]></action>
		</index>
		
		<get>
			<description><![CDATA[This method, 'gov_orgs/{GOV_ORG_ID}', allows you to get details about a specific governing organization.]]></description>
			
			<action file='gov_orgs.php'><![CDATA[getGovOrg($_REST['gov_orgs']);]]></action>
		</get>
		
		<post>
			<description><![CDATA[The post method allows the posting of new events for approval if the user is logged in and authorized to submit events.]]>
			</description>
			
			<action file='gov_orgs.php'><![CDATA[addGovOrg($_POST['gov_orgsText']);]]></action>
			
			<param id='gov_orgsText'> <!-- TODO Can the acronym be done without the need to ask for it? -->
				<description><![CDATA[Add a Governing Organization by supplying its name and acronym, and get its index in return.]]></description>
				<!-- <defaultValue><![CDATA[(No Default)]]></defaultValue> Taken out because no default-->
				<exampleValue><![CDATA[('Interfraternity Council', 'IFC'}]]></exampleValue>
			</param>
		</post>
		
		<command id='orgs' security='public'>
			<description><![CDATA[This allows you to see organizations that are governed by the specified governing organization.]]></description>
		
			<get>
				<description><![CDATA[This method, 'gov_orgs/[anything]/orgs/{ORG_ID} allows you to get a list of organizations that are governed by the specified governing organization]]></description>
			
				<action file='gov_orgs.php'><![CDATA[getOrgs($_REST['gov_orgs']);]]></action>
			</get>
		
		</command> <!-- Closes nested orgs -->
		
	</command> <!-- Closes gov_orgs -->
	
	
<!-- ORGS API -->
	<command id='orgs' security='public'>
		<description><![CDATA[This allows you to see, add, and remove organizations]]></description>
		
		<index>
			<description><![CDATA[This returns a listing of all organizations.]]>
			</description>
			
			<action file='orgs.php'><![CDATA[listOrgs();]]></action>
		</index>
		
		<get>
			<description><![CDATA[By designating 'orgs/{ORG_ID}', details about a specific organization will be returned.]]></description>
		
			<action file='orgs.php'><![CDATA[getOrg($_REST['orgs']);]]></action>
		</get>
		
		<post> <!-- TODO should be private -->
			<description><![CDATA[The post method allows the posting of new orgs if the user is logged in and authorized to submit organizations.]]>
			</description>
			
			<action file='orgs.php'><![CDATA[addOrg($_POST['orgsText']);]]></action>
			
			<param id='orgsText'>
				<description><![CDATA[Data related to the org.]]></description>
				<!-- <defaultValue><![CDATA[(No Default)]]></defaultValue> Taken out because no default-->
				<exampleValue><![CDATA[('Alpha Alpha', '1', 'Alpha Beta', 'Al-Be', 'Fraternity', 'Social', '1801', '1886', 'Alpha Alpha has long been known as a fraternity with a rich history of involvement and character. The handsome men of Al-Be strive to be the best men they can be in and out of the classroom.', '66 5th St NW|Atlanta, GA 30308', '4adc6aabf964a5202f2c21e3', 'http://bit.ly/7hNh', 'http://bit.ly/16ECqQ8')]]>
				</exampleValue>
			</param>
		</post>
		
		<put>
			<description><![CDATA[This is how you can update an org]]></description>
			
			<action file='events.php'><![CDATA[updateEvent($_REST['org'],$_POST['orgText']);]]></action>
			
			<param id='eventText'>
				<description><![CDATA[org Text To Update]]></description>
				<defaultValue><![CDATA[some default event org update]]></defaultValue>
				<exampleValue><![CDATA[some example event org update]]></exampleValue>
			</param>
		</put>
		
		<delete> <!-- <TODO> Should be private </TODO> -->
			<description><![CDATA[This is how you can delete an org]]></description>
			
			<action file='orgs.php'><![CDATA[deleteEvent($_REST['org']);]]></action>
		</delete>
	</command>
	

<!-- EVENTS THIS WEEK -->
	<command id='this_week' security='public'>
		<description><![CDATA[This week returns all events that are approved and start on or after the current day.]]>
		</description>
		
		<index> <!-- TODO this might be supposed to be <index> -->
			<description><![CDATA[This week returns all events that are approved and start on or after the current day.]]>
			</description>
			
			<action file='events.php'><![CDATA[getThisWeek();]]></action>
		</index>
	</command>
	
</api>
